import pandas as pd

data = pd.read_csv('diabetes_2.csv')
data.dtypes
'''Pregnancies                   int64
Glucose                       int64
BloodPressure                 int64
SkinThickness                 int64
Insulin                       int64
BMI                         float64
DiabetesPedigreeFunction    float64
Age                           int64
Outcome                       int64
dtype: object'''
Y = data.Outcome
data.drop('Outcome', axis='columns', inplace=True)

from sklearn.model_selection import train_test_split
xtrain, xtest, ytrain, ytest = train_test_split(data,Y, train_size = 0.2, random_state = 2)


import tensorflow as tf
import keras

model_NN = keras.Sequential([
    keras.layers.Dense(100, input_dim=8, activation='relu'),
    keras.layers.Dense(70, activation='relu'),
    keras.layers.Dense(40, activation='relu'),
    keras.layers.Dense(10, activation='relu'),
    keras.layers.Dense(1, activation='sigmoid')
])

model_NN.compile(optimizer='adam', loss = 'binary_crossentropy', metrics=['accuracy'])
model_NN.fit(xtrain, ytrain, epochs=100)
model_NN.evaluate(xtest, ytest)#[0.9255329370498657, 0.6617886424064636]

from sklearn.metrics import classification_report
import numpy as np
ypred = np.round(model_NN.predict(xtest).reshape(-1,))
print(classification_report(ytest, ypred))

'''
                precision    recall  f1-score   support

           0       0.73      0.88      0.80       408
           1       0.60      0.37      0.46       207

    accuracy                           0.71       615
   macro avg       0.67      0.62      0.63       615
weighted avg       0.69      0.71      0.68       615
# without DROPOUT
'''
